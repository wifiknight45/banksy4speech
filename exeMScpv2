import spacy
from nltk.corpus import wordnet
import nltk
from textblob import TextBlob

# Ensure NLTK resources are downloaded for synonym extraction
nltk.download("wordnet")

def pos_tagger(sentence):
    # Load pre-trained SpaCy model
    nlp = spacy.load("en_core_web_sm")
    doc = nlp(sentence)
    
    print("\nDetailed Analysis for Each Token:\n")
    for token in doc:
        synonyms = get_synonyms(token.text)
        print(f"Word: {token.text}, POS Tag: {token.pos_}, "
              f"Dependency: {token.dep_}, Lemma: {token.lemma_}, "
              f"Head Word: {token.head.text}, "
              f"Synonyms: {', '.join(synonyms) if synonyms else 'N/A'}")
    
    print("\nNamed Entities in the Sentence:\n")
    for ent in doc.ents:
        print(f"Entity: {ent.text}, Label: {ent.label_}")

    # Perform sentiment analysis
    analyze_sentiment(sentence)

    save_to_file(doc)

def get_synonyms(word):
    """Find synonyms using WordNet (NLTK)"""
    synonyms = []
    for syn in wordnet.synsets(word):
        for lemma in syn.lemmas():
            synonyms.append(lemma.name())
    return list(set(synonyms))  # Return unique synonyms

def analyze_sentiment(sentence):
    """Analyze sentiment using TextBlob"""
    blob = TextBlob(sentence)
    sentiment = blob.sentiment
    print("\nSentiment Analysis:\n")
    print(f"Polarity: {sentiment.polarity} (Scale: -1 to 1)")
    print(f"Subjectivity: {sentiment.subjectivity} (Scale: 0 to 1)")

def save_to_file(doc):
    """Save results to a file for further analysis"""
    with open("pos_tagger_output.txt", "w", encoding="utf-8") as file:
        file.write("Word Analysis:\n")
        for token in doc:
            file.write(f"Word: {token.text}, POS Tag: {token.pos_}, "
                       f"Dependency: {token.dep_}, Lemma: {token.lemma_}, "
                       f"Head Word: {token.head.text}\n")
        file.write("\nNamed Entities:\n")
        for ent in doc.ents:
            file.write(f"Entity: {ent.text}, Label: {ent.label_}\n")
    print("\nResults saved to 'pos_tagger_output.txt'!")
